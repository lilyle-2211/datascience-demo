name: Data Science Pipeline Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Add permissions for test reporting
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    # Simplified to Python 3.12 only for faster CI/CD
    # Can add 3.11 back later if needed for compatibility

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Set up Java 17 (required for PySpark 4.0+)
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync

    - name: Run data profiling tests
      run: |
        uv run pytest tests/test_data_profiling.py -v --tb=short --junit-xml=test-results.xml

    - name: Generate Markdown test report
      if: always()
      run: |
        echo "# Test Results Report" > TEST_RESULTS.md
        echo "" >> TEST_RESULTS.md
        echo "## Summary" >> TEST_RESULTS.md
        echo "- **Date**: $(date)" >> TEST_RESULTS.md
        echo "- **Python Version**: 3.12" >> TEST_RESULTS.md
        echo "- **PySpark Version**: 4.0.1" >> TEST_RESULTS.md
        echo "" >> TEST_RESULTS.md
        echo "## Test Output" >> TEST_RESULTS.md
        echo '```' >> TEST_RESULTS.md
        uv run pytest tests/test_data_profiling.py -v --tb=short >> TEST_RESULTS.md 2>&1 || true
        echo '```' >> TEST_RESULTS.md

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-python-3.12
        path: |
          test-results.xml
          TEST_RESULTS.md

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: uv sync

    - name: Run linting (if ruff is configured)
      run: |
        # Add your linting commands here if needed
        echo "Linting step - add ruff or other linters as needed"
